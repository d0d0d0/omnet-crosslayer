//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// 
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
// 
// You should have received a copy of the GNU Lesser General Public License
// along with this program.  If not, see http://www.gnu.org/licenses/.
// 

cplusplus {{
#include "inet/common/INETDefs.h"
#include "inet/networklayer/common/L3Address.h"
#include "inet/networklayer/ipv4/IPv4InterfaceData.h"
#include "inet/linklayer/common/MACAddress.h"
#include "inet/linklayer/ideal/IdealMacFrame_m.h"
#include "inet/routing/aodv/AODVControlPackets_m.h"
#include <vector>
}}

namespace inet;

class noncobject Node;
class noncobject SourceRoute;
class noncobject SourceRouteVector;
class noncobject Cluster;
class noncobject Neighbors;
class noncobject SightArea;
class noncobject NegVector;
class noncobject DensityVector;
class noncobject IDVector;
class noncobject Path;
class noncobject L3Address;
class noncobject IPv4Address;
class noncobject MACAddress;
class noncobject AODVControlPacket;
class noncobject IdealMacFrame;

enum CLType
{
    GENERAL = -1;
	CROSS_LAYER_BASE = 0;
	CROSS_LAYER_PHY = 1;
	CROSS_LAYER_LINK = 2;
	CROSS_LAYER_NET = 3;
	CROSS_LAYER_TRANS = 4;
	CROSS_LAYER_APP = 5;
	CROSS_LAYER_ENERGY = 6;
	CROSS_LAYER_SELF = 7;
}

enum NetType
{
	NET_GET_SELF = 0;
}

enum TransType
{
	TRANS_GET_SELF = 0;
}

enum LinkType
{
	LINK_GET_SELF = 0;
}

enum PhyType
{
	PHY_GET_SELF = 0;
}

enum AppType 
{
	APP_GET_SELF = 0;
}

enum CrossType
{
	CHECK_TICK = 0;
}

packet CrossLayerMsg {
    int type @enum(CLType);
    string desc;
}

packet CrossPhyMsg extends CrossLayerMsg {
    type = CROSS_LAYER_PHY;
	desc = "$$$ CROSS_LAYER_PHY generated by msg definition $$$";
	int m_type @enum(PhyType) = -1;
}

packet CrossLinkMsg extends CrossLayerMsg {
    type = CROSS_LAYER_LINK;
	desc = "$$$ CROSS_LAYER_LINK generated by msg definition $$$";
	int m_type @enum(LinkType) = -1;
}

packet CrossNetMsg extends CrossLayerMsg {
    type = CROSS_LAYER_NET;
	desc = "$$$ CROSS_LAYER_NET generated by msg definition $$$";
	int m_type @enum(NetType) = -1;
}

packet CrossTransMsg extends CrossLayerMsg {
    type = CROSS_LAYER_TRANS;
	desc = "$$$ CROSS_LAYER_TRANS generated by msg definition $$$";
	int m_type @enum(TransType) = -1;
}

packet CrossAppMsg extends CrossLayerMsg {
    type = CROSS_LAYER_APP;
	desc = "$$$ CROSS_LAYER_APP generated by msg definition $$$";
	int m_type @enum(AppType) = -1;
}

packet CrossSelfMsg extends CrossLayerMsg {
    type = CROSS_LAYER_SELF;
	desc = "$$$ CROSS_LAYER_SELF generated by msg definition $$$";
	int m_type @enum(CrossType) = -1;
}